pipeline {
    agent any

    environment {
        IMAGE_NAME = 'Knantro/CBRAPI'
        IMAGE_TAG = 'latest'
        REGISTRY_CREDENTIALS = 'dockerhub-credentials-id'
        DOTNET_VERSION = 'netcoreapp3.1'
    }

    tools {
        dotnet "${DOTNET_VERSION}"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/Knantro/TestAPITask', branch: 'master'
            }
        }

        stage('Restore') {
            steps {
                sh 'dotnet restore'
            }
        }

        stage('Build') {
            steps {
                sh 'dotnet build --configuration Release --no-restore'
            }
        }

        // Должен быть, но тестов нет, но на будущее, на расширение функционала пусть будет
        stage('Test') {
            steps {
                sh 'dotnet test --no-restore --no-build --logger trx'
            }
        }

        stage('Publish') {
            steps {
                sh 'dotnet publish -c Release -o ./publish --no-build'
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}", ".")
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${REGISTRY_CREDENTIALS}") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy') {
            when {
                branch 'master'
            }
            steps {
                echo 'Deploying...'
                sh '''
                    ssh user@knantro.com << EOF
                    docker login -u knantro -p some_token
                    docker pull knantro/CBRAPI:latest
                    cd /opt/CBRAPI/
                    docker-compose down
                    docker-compose up -d
                    EOF
                  '''
            }
        }
    }

    post {
        success {
            echo 'Deploy successful!'
        }
        failure {
            echo 'Deploy failed!'
        }
    }
}
